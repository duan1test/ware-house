stages:
  - publish
  - test
  - deploy

publish:
  stage: publish
  script:
    - echo "hello"

phpunit:
  cache:
    paths:
      - vendor/
  stage: test
  image: php:8.1-fpm
  services:
    - mysql:latest
  variables:
    MYSQL_ROOT_PASSWORD: root
    MYSQL_DATABASE: cs-warehouse
    DB_CONNECTION: mysql
    DB_HOST: mysql
    DB_PORT: 3306
    DB_DATABASE: cs-warehouse
    DB_USERNAME: root
    DB_PASSWORD: root
  before_script:
    - test -d vendor || apt-get update && apt-get install -y libpng-dev libzip-dev zlib1g-dev
    - test -d vendor || docker-php-ext-install gd zip pdo_mysql 
    - test -d vendor || curl -sS https://getcomposer.org/installer | php
    - test -d vendor || mv composer.phar /usr/local/bin/composer
    - cp .env.runner .env
    - test -d vendor || composer install
  script:
    - php artisan key:generate
    - php artisan migrate
    - vendor/bin/phpunit --log-junit report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
  only:
    - merge_requests

deploy:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    ## Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    ## Optionally, if you will be using any Git commands, set the user name and
    ## and email.
    - git config --global user.email "hungpd@cs-soft.jp"
    - git config --global user.name "Hungpd"
    - ssh-keyscan -p 2018 $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "This job deploys from the $CI_COMMIT_BRANCH branch."
    - ssh $SERVER_USER@$SERVER_IP -p 2018 "bash -s" < execute.sh
  environment:
    name: develop
    url: https://warehouse.cssoft.jp
  only:
    - develop